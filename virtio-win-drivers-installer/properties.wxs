<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
<?if $(sys.BUILDARCH) = "x64" ?>
    <?define Win64 = "yes" ?>
    <?define WinUninstallRegLocation = Wow6432Node\ ?>
<?else ?>
    <?define Win64 = "no" ?>
    <?define WinUninstallRegLocation = '' ?>
<?endif ?>
    <!-- Set Cited Properties -->
    <Fragment>
        <Property Id="Set_Cited_properties" Value="1" />
        <SetProperty Id="ARPINSTALLLOCATION" Value="[INSTALLERDIR]" After="CostFinalize" />
    </Fragment>
    <!-- Launch Condition supported os-->
    <Fragment>
        <Property Id="LaunchConditionsSupportedOS" Value="1" />
        <Condition Message="OS must be Windows 10 or higher.">
            <![CDATA[Installed OR ((VersionNT >= 603) AND (REGISTRY_CURRENT_BUILD_NUMBER > 10240))]]>		
        </Condition>
    </Fragment>
    <!-- Launch Condition to disable launch on arch x86-->
    <Fragment>
        <Property Id="x86_Validation" Value="1" />
        <Condition Message= "Detected x64 Windows version, please use a x64 installer">
                <![CDATA[VersionNT <> VersionNT64 AND "$(sys.BUILDARCH)" = "x86"]]>
        </Condition>
    </Fragment>
    <!-- Launch Condition to disable launch on arch x64 -->
    <Fragment>
        <Property Id="x64_Validation" Value="1" />
        <Condition Message= "Detected x86 Windows version, please use a x86 installer">
                <![CDATA[VersionNT = VersionNT64 AND "$(sys.BUILDARCH)" = "x64"]]>
        </Condition>
    </Fragment>
    <!-- Query the ProductName registry value to detect os version -->
    <Fragment>
        <Property Id="Set_ProductName" Value="1" />
        <Property Id="REGISTRY_PRODUCT_NAME">
            <RegistrySearch Id="ProductNameSearch"
                Root="HKLM"
                Key="SOFTWARE\Microsoft\Windows NT\CurrentVersion"
                Name="ProductName"
                Type="raw" />
        </Property>
    </Fragment>
    <!-- Query the ProductName registry value to detect os version -->
    <Fragment>
        <Property Id="Set_CurrentBuildNumber" Value="1" />
        <Property Id="REGISTRY_CURRENT_BUILD_NUMBER">
            <RegistrySearch Id="CurrentBuildNumberSearch"
                Root="HKLM"
                Key="SOFTWARE\Microsoft\Windows NT\CurrentVersion"
                Name="CurrentBuildNumber"
                Type="raw" />
        </Property>
    </Fragment>
    <!-- This Properties are for the upgrade from RHV WGT logic -->
    <Fragment>
        <Property Id="Set_Old_WGT_props" Value="1" />
        <Property Id="REGISTRYSEARCH_OLD_WGT_UNINSTALL_PATH">
            <RegistrySearch Id="wgt_uninstall_path"
                Root="HKLM"
                Key="SOFTWARE\$(var.WinUninstallRegLocation)Microsoft\Windows\CurrentVersion\Uninstall\{042CD13C-735D-4140-B146-D3F8263D7E4C}"
                Type="raw"
                Name="UninstallString"
                Win64='$(var.Win64)'/>
        </Property>
        <CustomAction 
            Id="CA_InvokeUninstallWGT"
            Directory="TARGETDIR"
            ExeCommand='cmd.exe /c [REGISTRYSEARCH_OLD_WGT_UNINSTALL_PATH]'/>
        <CustomAction
            Id="CA_OldInstallerError" 
            Error="An old version of WGT has been detected please uninstall it and try again"/>
    </Fragment>
    <!-- This Properties are for back up and update static IP logic -->
    <Fragment>
<?if $(sys.BUILDARCH) = "x64" ?>
        <Binary Id="ConfManagementDll" SourceFile="../Libraries/x64/DrvInstCA.dll" />
<?else ?>
        <Binary Id="ConfManagementDll" SourceFile="../Libraries/x86/DrvInstCA.dll" />
<?endif ?>
	<Property Id="IPCONFFILENAME" Value="vionet.cfg" />
        <Property Id="VIOCONFFILENAME" Value="viocfg.cfg" />
        <CustomAction
            Id="CA_RestoreIPConfig" Script="vbscript"
            Impersonate="no" Execute="deferred">
            <![CDATA[
                Dim wsShell
                Set wsShell = CreateObject("WScript.shell")
                Dim nmFile
                nmFile = Session.Property("CustomActionData")
                Dim fsObj
                Set fsObj = CreateObject("Scripting.FileSystemObject")
                If fsObj.FileExists(nmFile) Then
                    wsShell.run "cmd /c netsh exec " & Chr(34) & nmFile & Chr(34), 1, TRUE
                End If
            ]]>
        </CustomAction>
        <CustomAction
            Id="CA_RestoreIPConfigProperty"
            Property = "CA_RestoreIPConfig"
            Value = "[INSTALLERDIR][IPCONFFILENAME]" />
        <CustomAction
            Id="CA_RestoreVIOConfig"
            BinaryKey="ConfManagementDll"
            DllEntry="RestoreSettings"
            Impersonate="no"
            Execute="deferred">
        </CustomAction>
	<CustomAction
            Id="CA_RestoreVIOConfigProperty"
            Property = "CA_RestoreVIOConfig"
            Value = "[INSTALLERDIR][VIOCONFFILENAME]" />
        <CustomAction
            Id="CA_SaveVIOConfig"
            BinaryKey="ConfManagementDll"
            DllEntry="SaveSettings"
            Impersonate="no"
            Execute="deferred">
        </CustomAction>
        <CustomAction
            Id="CA_SaveVIOConfigProperty"
            Property = "CA_SaveVIOConfig"
            Value = "[INSTALLERDIR][VIOCONFFILENAME]" />
    </Fragment>
<?undef Win64?>
</Wix>
